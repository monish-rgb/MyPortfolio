// .page-title {
//     text-align: left;
//     font-size: 2.5rem;
//     margin-bottom: 30px;
//     font-size: 60px;
//     font-weight: bold;
//     color: #e0f0ff;
//     padding: 5px 5px;
//   }
//   .works-section {
//     padding: 50px 20px;
//     text-align: center;
//   }
  
//   .title {
//     font-size: 2rem;
//     font-weight: bold;
//     display: flex;
//     align-items: center;
//     justify-content: center;
//     gap: 8px;
//   }
  
//   .arrow {
//     font-size: 1.5rem;
//     transform: rotate(0deg);
//     display: inline-block;
//     color: #e0f0ff;
//   }

//   /*------*/
//   .section-title {
//     position: relative;
//     text-align: left;
//     font-size: 2rem;
//     color: #e0e3e2;
//     margin-bottom: 30px;
//     margin-left: 20px;
//   }
//   .projects-section {
//     text-align: center;
//     //background: #0a0a0a;
//     padding: 50px 0;
  
//       span {
//         color: #6effa3;
//       }
//     }

//     swiper-container {
//       width: 90%;
//       margin: auto;
//     }
  
//     swiper-slide {
//       display: flex;
//       justify-content: center;
//       align-items: center;
//     }
  
//     .project-card {
//       background: rgba(255, 255, 255, 0.05);
//       border-radius: 12px;
//       overflow: hidden;
//       text-align: left;
//       width: 300px;
//       transition: 0.3s;
      
  
//       &:hover {
//         transform: scale(1.05);
//         box-shadow: 0 8px 20px rgba(3, 246, 149, 0.962);
//       }
  
//       .project-image {
//         width: 98%;
//         height: 130px;
//         object-fit: cover;
//       }
  
//       .project-info {
//         padding: 15px;
  
//         h3 {
//           font-size: 0.9rem;
//           font-weight: bold;
//           color: white;
//           margin-bottom: 5px;
//         }
  
//         p {
//           font-size: 0.7rem;
//           color: #b3b3b3;
//           margin-bottom: 10px;
//         }
  
//         .project-links {
//           display: flex;
//           gap: 10px;
  
//           a {
//             font-size: 0.9rem;
//             color: #a855f7;
//             text-decoration: none;
//             display: flex;
//             align-items: center;
//             gap: 5px;
  
//             i {
//               font-size: 1rem;
//             }
  
//             &:hover {
//               text-decoration: underline;
//             }
//           }
//         }
//       }
//   }

.project-info {
        padding: 15px;
  
        h3 {
          font-size: 0.9rem;
          font-weight: bold;
          color: white;
          margin-bottom: 5px;
        }
  
        p {
          font-size: 0.5rem;
          color: #b3b3b3;
          margin-bottom: 10px;
        }
      }


  .icon{
    font-size: 1.5rem;
    margin: 10px;
    transition: transform 0.3s ease-in-out, color 0.3s ease-in-out;
    color: #e0e3e2;
    &:hover {
      transform: scale(1.2);
      color: #05f89b;
    }
  }


/* From Uiverse.io by ashwin_5681 */ 
.card {
  width: 100%;
  height: 100%;
  padding: 15px;
  border: 1px solid #ccc;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  color: white;
  text-align: center;
}

.card p {
  font-size: 14px;
  color: white;
}

.slider {
  width: 100%;
  height: var(--height);
  overflow: hidden;
  mask-image: linear-gradient(to right, transparent, #000 10% 90%, transparent);
}
.slider .list {
  display: flex;
  width: 100%;
  min-width: calc(var(--width) * var(--quantity));
  position: relative;
}
.slider .list .item {
  width: var(--width);
  height: var(--height);
  position: absolute;
  left: 100%;
  animation: autoRun 20s linear infinite;
  transition: filter 1s;
  animation-delay: calc(
    (20s / var(--quantity)) * (var(--position) - 1) - 20s
  ) !important;
}
.slider .list .item img {
  width: 100%;
}
@keyframes autoRun {
  from {
    left: 100%;
  }
  to {
    left: calc(var(--width) * -1);
  }
}
.slider:hover .item {
  animation-play-state: paused !important;
  filter: grayscale(1);
}
.slider .item:hover {
  filter: grayscale(0);
}
.slider[reverse="true"] .item {
  animation: reversePlay 10s linear infinite;
}
@keyframes reversePlay {
  from {
    left: calc(var(--width) * -1);
  }
  to {
    left: 100%;
  }
}

  